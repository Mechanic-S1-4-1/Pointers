#include <iostream>

using namespace std;

//#define POINTERS_BASICS
#define POINTERS_AND_ARRAYS

void main()
{
	setlocale(0, "rus");

#ifdef POINTERS_BASICS
	cout << "Hello pointers!\n"<<endl;

	int a = 2;
	int* pa = &a;

	cout << a << endl; // Вывод переменной а на экран.
	cout << &a << endl; // Взятие адреса переменной а прямо при выводе
	cout << pa << endl; // Вывод адреса переменой а хрянящегося в указателе pa
	cout << *pa << endl; /* * - это оператор разыменования (dereference operator).
                         Это унарный оператор который возвращает занчение по адресу. 
						 У этого оператора есть только префиксная форма записи.
	                     Только при объявлении указателя * показывает что объявляемая переменная - указатель. 
						 Во всех остальных * случаях * разыменовывает адрес.*/
	// pa работаем с адресом
	// *pa  - работаем со значением по адресу
	// & - оператор взятия адреса (Adress-of-operator). Это Унарный оператор который возвращает адрес своего операнда.
	// У этого оператора есть только префиксная форма записи т.е. он всегда ставится перед операндом.

	int* pb; // int* - 
	int b = 3; // int
	pb = &b; // инициализируем УКАЗАТЕЛЬ после его объявления 
	cout << b << endl;
	cout << &b << endl;
	cout << pb << endl;
	cout << *pb << endl;

	/*
	int - 'int';
	int* - Указатель на 'int'
	double - 'double'
	double* - Указатель на 'doudle'
	char - 'char'
	char* - Указатель на 'char'
	*/
#endif

#ifdef POINTERS_AND_ARRAYS
	const int n = 5;
	int arr[n] = { 3,5,8,13,21 };
	cout <<"Имя массива является указателем на массив т.к. содержит адрес"
	"\nнулевого элемента массива, а следовательно и адрес всего массива: " << arr << endl;
	cout <<"Разыменовали адрес и получили нулевой элемент нашего массива: "<< *arr<<"\n"<< endl;
	cout << endl;

	for (int i = 0;i < n;i++) // чтоб обратиться к каждому элементу нашего массива нужно использовать цикл for 
	{ 
		cout << arr + i << "\n"; // к массиву мы прибавляем i т.е. 1, но адрес изменяется на 4 байта, потому что
		                         // у нас тип данных массива int (int arr[n] = { 3,5,8,13,21 };) 
		//cout << *arr + i << "\t";
		cout << *(arr + i) << "\n"; // - этот вариант верный
	}
	cout << endl;
#endif
}